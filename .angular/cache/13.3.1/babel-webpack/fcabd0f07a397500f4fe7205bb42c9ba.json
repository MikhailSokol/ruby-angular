{"ast":null,"code":"import { tap } from \"rxjs/internal/operators/tap\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ModalformService = /*#__PURE__*/(() => {\n  class ModalformService {\n    constructor(http) {\n      this.http = http;\n      this.todos = [];\n      this.size = 400;\n    }\n\n    fetch() {\n      return this.http.get('https://angular-rails-todo-app.herokuapp.com/projects').pipe(tap(todos => {\n        this.todos = todos;\n      }));\n    }\n\n    updateFetch(idCat, idText) {\n      const target = this.todos.filter(el => el.id === idCat)[0];\n      const targetText = target.todos.filter(el => el.id === idText)[0];\n      const body = {\n        isCompleted: !targetText.isCompleted,\n        isChecked: targetText.isChecked\n      };\n      return this.http.patch(`http://localhost:3000/projects/${idCat}/todo/${idText}`, body).subscribe((data = {}) => {\n        this.todos.map(el => {\n          if (el.id === idCat) {\n            el.todos.map(elem => {\n              if (elem.id === idText) {\n                elem.isCompleted = data.isCompleted;\n                elem.isChecked = data.isChecked;\n              }\n            });\n          }\n        });\n      });\n    }\n\n    checkingLengthOfArrayTodo() {\n      this.todos.map(el => {\n        if (el.todos.length > 7) {\n          this.size = 400 + (el.todos.length - 6) * 75;\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ModalformService.ɵfac = function ModalformService_Factory(t) {\n    return new (t || ModalformService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ModalformService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalformService,\n    factory: ModalformService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModalformService;\n})();","map":null,"metadata":{},"sourceType":"module"}