{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/modalform.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction ModalFormComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵlistener(\"click\", function ModalFormComponent_mat_option_13_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.selectOption(todo_r2.title);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", todo_r2.title, \" \");\n  }\n}\n\nfunction ModalFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 14);\n    i0.ɵɵtext(6, \"1212222222222222\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ModalFormComponent = /*#__PURE__*/(() => {\n  class ModalFormComponent {\n    constructor(dialog, TodoServices, http) {\n      this.dialog = dialog;\n      this.TodoServices = TodoServices;\n      this.http = http;\n    }\n\n    selectOption(title) {\n      if (title === \"0\") {\n        this.categoryTitle = title;\n        this.visible = true;\n      } else {\n        this.visible = false;\n        this.categoryTitle = title;\n      }\n    }\n\n    createFetch() {\n      console.log(this.status);\n\n      if (this.categoryTitle === \"0\" && this.status === \"VALID\") {\n        const body = {\n          text: this.text,\n          title: this.category\n        };\n        this.http.post(\"https://angular-rails-todo-app.herokuapp.com/todos\", body).subscribe(res => {\n          this.obj = res;\n          this.TodoServices.todos.push(this.obj);\n          this.TodoServices.checkingLengthOfArrayTodo();\n        });\n      } else if (this.categoryTitle !== \"0\" && this.categoryTitle && this.text.length > 2) {\n        const body = {\n          text: this.text,\n          title: this.categoryTitle\n        };\n        this.http.post(\"https://angular-rails-todo-app.herokuapp.com/todos\", body).subscribe((res = {}) => {\n          this.obj = res;\n          this.TodoServices.todos.map(el => {\n            if (el.id === res.category_id) {\n              el.todos.push(res);\n            }\n\n            this.TodoServices.checkingLengthOfArrayTodo();\n          });\n        });\n      } else if (this.status !== \"VALID\") {\n        alert(\"Введите задачу и/или категорию\");\n      }\n    }\n\n    ngOnInit() {\n      this.todo = new FormGroup({\n        text: new FormControl(\"\", [Validators.required, Validators.minLength(3)]),\n        category: new FormControl(\"\", [Validators.required, Validators.minLength(3)])\n      });\n      this.todo.valueChanges.subscribe(el => {\n        this.text = el.text;\n        this.category = el.category;\n        this.todo.statusChanges.subscribe(stat => {\n          this.status = stat;\n        });\n      });\n    }\n\n  }\n\n  ModalFormComponent.ɵfac = function ModalFormComponent_Factory(t) {\n    return new (t || ModalFormComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ModalformService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  ModalFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalFormComponent,\n    selectors: [[\"app-modal-form\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[3, \"formGroup\"], [\"id\", \"flex\"], [\"id\", \"titleAdd\"], [\"appearance\", \"fill\", 1, \"example-form-field\"], [\"required\", \"\", \"formControlName\", \"text\", \"matInput\", \"\", \"type\", \"text\"], [\"id\", \"select\"], [\"value\", \"todo.title\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\", 3, \"click\"], [\"id\", \"newCategory\", 4, \"ngIf\"], [\"mat-dialog-close\", \"\", \"mat-button\", \"\", \"color\", \"primary\", 1, \"modalBtn\", 3, \"click\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", \"mat-button\", \"\", \"color\", \"primary\", 1, \"modalBtn\"], [\"value\", \"todo.title\", 3, \"click\"], [\"id\", \"newCategory\"], [\"formControlName\", \"category\", \"matInput\", \"\", \"type\", \"text\"], [\"id\", \"error\"]],\n    template: function ModalFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"mat-form-field\", 3)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-select\");\n        i0.ɵɵtemplate(13, ModalFormComponent_mat_option_13_Template, 2, 1, \"mat-option\", 6);\n        i0.ɵɵelementStart(14, \"mat-option\", 7);\n        i0.ɵɵlistener(\"click\", function ModalFormComponent_Template_mat_option_click_14_listener() {\n          return ctx.selectOption(\"0\");\n        });\n        i0.ɵɵtext(15, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(16, ModalFormComponent_div_16_Template, 7, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ModalFormComponent_Template_button_click_18_listener() {\n          return ctx.createFetch();\n        });\n        i0.ɵɵtext(19, \" \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 10);\n        i0.ɵɵtext(21, \" \\u0437\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.todo);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.TodoServices.todos);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.visible);\n      }\n    },\n    directives: [i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatFormField, i5.MatLabel, i4.DefaultValueAccessor, i6.MatInput, i4.RequiredValidator, i4.NgControlStatus, i4.FormControlName, i7.MatSelect, i8.NgForOf, i9.MatOption, i8.NgIf, i10.MatButton, i1.MatDialogClose],\n    styles: [\".example-form-field[_ngcontent-%COMP%]{padding-top:50px;width:400px}#flex[_ngcontent-%COMP%]{display:flex;flex-direction:column}.modalBtn[_ngcontent-%COMP%]{width:200px}#titleAdd[_ngcontent-%COMP%]{text-align:center;font-weight:500;font-size:30px}#error[_ngcontent-%COMP%]{text-align:center;margin-bottom:5px;margin-top:-10px;visibility:hidden}\"]\n  });\n  return ModalFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}