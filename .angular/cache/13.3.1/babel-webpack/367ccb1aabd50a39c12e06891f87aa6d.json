{"ast":null,"code":"import { ModalFormComponent } from \"./modal-form/modal-form.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"./services/modalform.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/checkbox\";\n\nfunction AppComponent_mat_grid_tile_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"mat-checkbox\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_grid_tile_7_div_6_Template_mat_checkbox_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const t_r4 = restoredCtx.$implicit;\n      const todo_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.TodoServices.updateFetch(todo_r1.id, t_r4.id);\n    });\n    i0.ɵɵelementStart(2, \"div\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const t_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", t_r4.isCompleted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMapInterpolate1(\"text-decoration:\", t_r4.isCompleted === true ? \"line-through\" : \"none\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", t_r4.text, \" \");\n  }\n}\n\nfunction AppComponent_mat_grid_tile_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"mat-grid-tile-header\")(2, \"div\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵtemplate(6, AppComponent_mat_grid_tile_7_div_6_Template, 4, 5, \"div\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(todo_r1.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", todo_r1.todos);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, dialog, TodoServices) {\n      this.http = http;\n      this.dialog = dialog;\n      this.TodoServices = TodoServices;\n    }\n\n    openDialog() {\n      this.dialog.open(ModalFormComponent);\n    }\n\n    ngOnInit() {\n      this.TodoServices.fetch().subscribe(val => {\n        this.TodoServices.checkingLengthOfArrayTodo();\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.ModalformService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"header\"], [\"id\", \"icon\", \"mat-button\", \"\", 3, \"click\"], [\"aria-hidden\", \"false\", 1, \"material-icons\"], [\"cols\", \"3\", \"gutterSize\", \"200px\", 3, \"rowHeight\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"title\"], [1, \"main\"], [1, \"list\"], [\"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [1, \"item\"], [\"type\", \"checkbox\", 1, \"example-margin\", 3, \"checked\", \"color\", \"click\"], [1, \"text\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"div\");\n        i0.ɵɵtext(2, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_span_click_3_listener() {\n          return ctx.openDialog();\n        });\n        i0.ɵɵelementStart(4, \"mat-icon\", 2);\n        i0.ɵɵtext(5, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"mat-grid-list\", 3);\n        i0.ɵɵtemplate(7, AppComponent_mat_grid_tile_7_Template, 7, 2, \"mat-grid-tile\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵpropertyInterpolate(\"rowHeight\", ctx.TodoServices.size);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.TodoServices.todos);\n      }\n    },\n    directives: [i4.MatCard, i5.MatIcon, i6.MatGridList, i7.NgForOf, i6.MatGridTile, i6.MatGridTileText, i6.MatGridTileHeaderCssMatStyler, i8.MatCheckbox],\n    styles: [\"*[_ngcontent-%COMP%]{margin:0;padding:0}.header[_ngcontent-%COMP%]{height:60px;background-color:#00f;text-align:center;padding-top:60px;font-size:50px;color:#ffebcd}.mat-grid-tile[_ngcontent-%COMP%]{background:lightblue}.mat-grid-list[_ngcontent-%COMP%]{margin:5%}.mat-grid-tile[_ngcontent-%COMP%]{border-radius:10px}.mat-grid-tile-header[_ngcontent-%COMP%]{font-size:30px}.material-icons[_ngcontent-%COMP%]{font-size:100px}#icon[_ngcontent-%COMP%]{margin-left:85%;position:relative;bottom:60px;color:wheat}.list[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:30px 0 5px}.item[_ngcontent-%COMP%]{margin-top:30px;margin-bottom:10px;margin-right:150px}.main[_ngcontent-%COMP%]{display:flex;flex-direction:column}#title[_ngcontent-%COMP%]{margin-left:10%;text-transform:uppercase}.example-margin[_ngcontent-%COMP%]{width:40px;margin-right:100px}.text[_ngcontent-%COMP%]{padding-left:10px;font-size:20px;transform:scale(1)}.text[_ngcontent-%COMP%]:first-letter{text-transform:uppercase}.example-margin[_ngcontent-%COMP%]{transform:scale(1.7)}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}